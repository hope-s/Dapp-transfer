[{"D:\\my-dapp\\src\\index.tsx":"1","D:\\my-dapp\\src\\styles.ts":"2","D:\\my-dapp\\src\\App.tsx":"3","D:\\my-dapp\\src\\helpers\\api.ts":"4","D:\\my-dapp\\src\\helpers\\utilities.ts":"5","D:\\my-dapp\\src\\components\\Column.tsx":"6","D:\\my-dapp\\src\\components\\Modal.tsx":"7","D:\\my-dapp\\src\\components\\Wrapper.tsx":"8","D:\\my-dapp\\src\\components\\Header.tsx":"9","D:\\my-dapp\\src\\components\\Button.tsx":"10","D:\\my-dapp\\src\\components\\AccountAssets.tsx":"11","D:\\my-dapp\\src\\components\\ModalResult.tsx":"12","D:\\my-dapp\\src\\components\\Loader.tsx":"13","D:\\my-dapp\\src\\components\\ConnectButton.tsx":"14","D:\\my-dapp\\src\\helpers\\chains.ts":"15","D:\\my-dapp\\src\\helpers\\bignumber.ts":"16","D:\\my-dapp\\src\\components\\Blockie.tsx":"17","D:\\my-dapp\\src\\components\\AssetRow.tsx":"18","D:\\my-dapp\\src\\components\\Icon.tsx":"19","D:\\my-dapp\\src\\components\\ERC20Icon.tsx":"20"},{"size":562,"mtime":1640797390534,"results":"21","hashOfConfig":"22"},{"size":4243,"mtime":1640797390534,"results":"23","hashOfConfig":"22"},{"size":17387,"mtime":1640855047791,"results":"24","hashOfConfig":"22"},{"size":1258,"mtime":1640797390530,"results":"25","hashOfConfig":"22"},{"size":7654,"mtime":1640855030225,"results":"26","hashOfConfig":"22"},{"size":1178,"mtime":1640797390518,"results":"27","hashOfConfig":"22"},{"size":4210,"mtime":1640797390527,"results":"28","hashOfConfig":"22"},{"size":1035,"mtime":1640797390528,"results":"29","hashOfConfig":"22"},{"size":2041,"mtime":1640852337943,"results":"30","hashOfConfig":"22"},{"size":3487,"mtime":1640797390518,"results":"31","hashOfConfig":"22"},{"size":1525,"mtime":1640797390516,"results":"32","hashOfConfig":"22"},{"size":1734,"mtime":1640797390527,"results":"33","hashOfConfig":"22"},{"size":1984,"mtime":1640797390526,"results":"34","hashOfConfig":"22"},{"size":3357,"mtime":1640797390519,"results":"35","hashOfConfig":"22"},{"size":4056,"mtime":1640797390531,"results":"36","hashOfConfig":"22"},{"size":5192,"mtime":1640797390530,"results":"37","hashOfConfig":"22"},{"size":953,"mtime":1640797390517,"results":"38","hashOfConfig":"22"},{"size":1623,"mtime":1640855592350,"results":"39","hashOfConfig":"22"},{"size":725,"mtime":1640797390526,"results":"40","hashOfConfig":"22"},{"size":540,"mtime":1640797390525,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"tgl1yt",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\my-dapp\\src\\index.tsx",[],["84","85"],"D:\\my-dapp\\src\\styles.ts",[],"D:\\my-dapp\\src\\App.tsx",[],"D:\\my-dapp\\src\\helpers\\api.ts",[],"D:\\my-dapp\\src\\helpers\\utilities.ts",[],"D:\\my-dapp\\src\\components\\Column.tsx",[],"D:\\my-dapp\\src\\components\\Modal.tsx",["86"],"import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors, transitions } from \"../styles\";\n\ninterface ILightboxStyleProps {\n  show: boolean;\n  offset: number;\n  opacity?: number;\n}\n\nconst SLightbox = styled.div<ILightboxStyleProps>`\n  transition: opacity 0.1s ease-in-out;\n  text-align: center;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  margin-left: -50vw;\n  top: ${({ offset }) => (offset ? `-${offset}px` : 0)};\n  left: 50%;\n  z-index: 2;\n  will-change: opacity;\n  background-color: ${({ opacity }) => {\n    let alpha = 0.4;\n    if (typeof opacity === \"number\") {\n      alpha = opacity;\n    }\n    return `rgba(0, 0, 0, ${alpha})`;\n  }};\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"none\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SHitbox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\ninterface ICloseButtonStyleProps {\n  size: number;\n  color: string;\n  onClick?: any;\n}\n\nconst SCloseButton = styled.div<ICloseButtonStyleProps>`\n  transition: ${transitions.short};\n  position: absolute;\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  right: ${({ size }) => `${size / 1.6667}px`};\n  top: ${({ size }) => `${size / 1.6667}px`};\n  opacity: 0.5;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  &:before,\n  &:after {\n    position: absolute;\n    content: \" \";\n    height: ${({ size }) => `${size}px`};\n    width: 2px;\n    background: #fff !important;\n  }\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`;\n\nconst SCard = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  padding: 25px;\n  background-color: #1F4068;\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContent = styled.div`\n  position: relative;\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\ninterface IModalState {\n  offset: number;\n}\n\ninterface IModalProps {\n  children: React.ReactNode;\n  show: boolean;\n  toggleModal: any;\n  opacity?: number;\n}\n\nconst INITIAL_STATE: IModalState = {\n  offset: 0,\n};\n\nclass Modal extends React.Component<IModalProps, IModalState> {\n  public static propTypes = {\n    children: PropTypes.node.isRequired,\n    show: PropTypes.bool.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    opacity: PropTypes.number,\n  };\n\n  public lightbox?: HTMLDivElement | null;\n\n  public state: IModalState = {\n    ...INITIAL_STATE,\n  };\n\n  public componentDidUpdate() {\n    if (this.lightbox) {\n      const lightboxRect = this.lightbox.getBoundingClientRect();\n      const offset = lightboxRect.top > 0 ? lightboxRect.top : 0;\n\n      if (offset !== INITIAL_STATE.offset && offset !== this.state.offset) {\n        this.setState({ offset });\n      }\n    }\n  }\n\n  public toggleModal = async () => {\n    const d = typeof window !== \"undefined\" ? document : \"\";\n    const body = d ? d.body || d.getElementsByTagName(\"body\")[0] : \"\";\n    if (body) {\n      if (this.props.show) {\n        body.style.position = \"\";\n      } else {\n        body.style.position = \"fixed\";\n      }\n    }\n    this.props.toggleModal();\n  };\n\n  public render() {\n    const { offset } = this.state;\n    const { children, show, opacity } = this.props;\n    return (\n      <SLightbox\n        show={show}\n        offset={offset}\n        opacity={opacity}\n        ref={(c) => (this.lightbox = c)}\n      >\n        <SModalContainer>\n          <SHitbox onClick={this.toggleModal} />\n\n          <SCard>\n            <div style={{padding: '5px 10px'}} onClick={this.toggleModal} >\n              <SCloseButton size={25} color={\"dark\"} />\n            </div>\n            <SModalContent>{children}</SModalContent>\n          </SCard>\n        </SModalContainer>\n      </SLightbox>\n    );\n  }\n}\n\nexport default Modal;\n","D:\\my-dapp\\src\\components\\Wrapper.tsx",[],"D:\\my-dapp\\src\\components\\Header.tsx",[],"D:\\my-dapp\\src\\components\\Button.tsx",[],"D:\\my-dapp\\src\\components\\AccountAssets.tsx",[],"D:\\my-dapp\\src\\components\\ModalResult.tsx",[],"D:\\my-dapp\\src\\components\\Loader.tsx",[],"D:\\my-dapp\\src\\components\\ConnectButton.tsx",[],"D:\\my-dapp\\src\\helpers\\chains.ts",[],"D:\\my-dapp\\src\\helpers\\bignumber.ts",[],"D:\\my-dapp\\src\\components\\Blockie.tsx",[],"D:\\my-dapp\\src\\components\\AssetRow.tsx",[],"D:\\my-dapp\\src\\components\\Icon.tsx",[],"D:\\my-dapp\\src\\components\\ERC20Icon.tsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":16},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]